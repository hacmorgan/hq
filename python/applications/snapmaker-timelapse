#!/usr/bin/env bash


##  snapmaker-timelapse - save images as a timelapse


source "$(type -p bash-std)"


function prepare_dirs
{
    mkdir -pv $options_capture_dir
}


function timestamp
{
    date --iso-8601=seconds | sed -e 's#+.*##' -e 's#[-:]##g'
}


function capture_images
{
    function capture_image
    {
        fswebcam --device v4l2:/dev/video${options_v4l2_device} \
                 --jpeg 95 \
                 --set resolution=640x320 \
                 "$options_capture_dir/$(timestamp).jpg"
    }

    # Compute numbver of images to capture
    num_images=$(( options_print_time * 60 * 60 / options_timelapse_period ))

    # Capture images
    for _ in $(seq $num_images); do
        capture_image
        sleep $options_timelapse_period
    done
}


function options
{
    cat <<EOF
--capture-dir=<path>; default=$HOME/tmp/snapmaker-timelapse; Directory to save images to
--v4l2-device=<id>; default=2; Which camera device to use (typically: integrated webcam = 0, USB webcam = 2)
--timelapse-period=<seconds>; default=30; Time between timelapse image captures
--print-time,-p=<hours>; Time required for print to complete
EOF
}


function main-run
{
    prepare_dirs &&
        capture_images
}


# Parse args and set verbose variables
bash-std-application-init "$@" < <( options ) ||
    die "Failed to parse command line args"

main-run
